[{"_id":"3GYvQJiMNHp7QonLe","authorId":"Xq9eqFxPg3ms34yzb","content":"             \nI wanted to install Node on a free AWS ec2 instance. As is so often the case with ec2, I had to jump through some hoops. Hopefully my own experiences can save you some time. \n\nAs of June, 2013 Node runs perfectly on on Ubuntu 12.X LTS and 13.x. You can `$ apt-get install nodejs` but this will install node 0.6.0. \n\nIf you already installed node 0.6.0, uninstall with \n\n```\n$ sudo apt-get remove nodejs\n\n# If needed clean up symbolic link created when we installed node js\n$ hash -r\n```\n\nAdd Chris Lea's PPA to the list of locations that apt-get searches, and get the package.\n\n```\n$ sudo add-apt-repository ppa:chris-lea/node.js  \n$ sudo apt-get update  \n$ sudo apt-get install build-essential  \n$ sudo apt-get install nodejs  \n$ sudo apt-get install npm\n```\n\nNow you can `npm install`, `npm update` etc\n\nFor the record -- I also was able to build node from source by following the steps in [this excellent blog post](http://cuppster.com/2011/05/12/diy-node-js-server-on-amazon-ec2/) on cuppster.com. \n","createdAt":1.370883847741e+12,"editedAt":1.372959894266e+12,"publish":true,"slug":"install-node-010x-on-aws-ec2","tags":["aws","node","ec2"],"title":"Install Node 0.10.0 on AWS ec2 Ubuntu"},{"title":"A First Experiment","content":"\nLast night I left the Lab around 8pm, leaving my laptop at the Lab. As I've experienced before, I got just over 7 hours of sleep. Also, I talked on the phone with my Father for 30 minutes in the evening while I walked around exploring my new neighborhood. I definitely would have spent those 30 minutes on my laptop if I could have. ","tags":["awareness","no-laptop"],"publish":false,"authorId":"Xq9eqFxPg3ms34yzb","slug":"a-first-experiment","createdAt":1.411051686599e+12,"_id":"5TvNhxvB6BZfogp7Z"},{"_id":"6qGtQnSaXh4sDcZef","authorId":"Xq9eqFxPg3ms34yzb","content":"\n                         \nIf you are browsing farmville.com and a script downloaded makes an ajax request to facebook.com, this is known as cross-origin resource sharing, or CORS.\n\nWhen a modern browser encounters a CORS request, it intervenes for security reasons. Browsers distinguish **Simple Requests**  from **Non-Simple Requests** using a different intervention strategy for each. \n\n## Simple Requests\n\nAn HTTP request is considered simple if all 3 criteria are met:\n\n1. The request method is **GET**, **HEAD** or **POST**\n2. the request uses only headers in the following list:\n  - Accept\n  - Accept-Language\n  - Content-Type\n  - Content-Language\n3. The value field of the Content-Type header matches one of the following:\n  - application/x-www-form-urlencoded\n  - multipart/form-data\n  - text/plain\n\nFor simple requests, the browser adds the `Origin` header behind the scenes. The request received by our server might look like this:\n\n```\nGET /some/resource\nHost: bar.other\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nOrigin: http://foo.example\n```\n\nThe server observes the `Origin` header, and serves back a response. The browser inspects the HTTP Response and looks for the Access-Control-Allow-Origin header. \n\n```\nAccess-Control-Allow-Origin: http://bar.example.com\n```\n\nIn the example above,  the server is indicating that only requests originating from `http://bar.example.com` are permitted to access the resource. The browser will discard the data in the http response, and throw a JavaScript error indicating that the AJAX request was unsuccessful. Note that wild cards can also be used for the value of `Access-Control-Allow-Origin`. In the next example, the server is indicating that requests from any origin may be permitted to access the response.\n\n```\nAccess-Control-Allow-Origin: *\n```\n\nThe Access Control headers hidden from the JavaScript API - they are removed be the browser before exposing the HTTP Response to your JavaScript code.\n\n## Non-Simple Requests\n\nFor non simple HTTP Requests, the browser employs a different security strategy.  Instead of sending an ajax request directly to the other server, it first sends an OPTIONS http request. The headers in the response to the OPTIONS request indicate to the browser if the server is willing to listen to requests originating from other servers. \n\nIn our example, facebook.com needs to be configured to respond to OPTIONS requests with a specific header format. These headers indicate to the browser which domains are allowed to make resource requests.\n\nCORS is the modern way to make cross-origin requests -- It's not supported by IE 7 and below. JSONP is another option for making cross origin requests.\n\nJSONP exploits the fact that `\u003cscript\u003e` elements are allowed to make cross-origin GET requests to retrieve script files. A server can return an html document containing a script tag with a cross origin `src='www.example.com'` attribute. The browser will not interfere with this request. \n\n```javascript\n\u003cscript\u003e\nvar myFunc = function(data){\n  console.log(data);\n};\n\n// append a script tag to the document. This will trigger a cross-origin GET request.\ndocument.write(\"\u003cscript src='http://facebook.com/example/api/callback=myFunc'\u003e\")\n\u003c/script\u003e\n```\n\nThe script returned by Facebook's executes a function that we (hopefully) defined prior to making the request.\n```javascript\n// example script returned and run by dynamically adding a script tag\nmyFunc({\n  name: 'Charles',\n  id: '123456'\n});\n```","createdAt":1.402276279829e+12,"editedAt":1.402325373521e+12,"publish":true,"slug":"crossorigin-resource-sharing-and-jsonp-a-simple-explanation","tags":["jsonp","cors","javascript"],"title":"Cross-Origin Resource Sharing and JSONP: A Simple Explanation"},{"_id":"7a3htae2nfrzr76Bx","authorId":"Xq9eqFxPg3ms34yzb","content":"\nFor as long as I can remember, I've had a hard time falling asleep, and been a very light sleeper. I found that working very hard during the day can help me fall asleep at night, but if I'm thinking about the work when I try to fall asleep, it can lead to a very restless night. I think that the *avoiding laptop at night* strategy can help me get my mind off work, and generally improve my sleeping. Last night (Sunday) I had my laptop at the house. I hoped to get some work done in the evening, but I decided to not to it in favor of playing some music with my girlfriend. Then I had a night of very difficult restless sleep. Could this have been mitigated by not having my laptop at all - removing the possibility of working more?","createdAt":1.411420695124e+12,"editedAt":1.411422012458e+12,"publish":false,"slug":"day-5","tags":["awareness"],"title":"Day 5"},{"_id":"BrMefQHisrBtgGXEJ","authorId":"Xq9eqFxPg3ms34yzb","content":"\nToday in [class](http://aware.media.mit.edu/details), Joi talked about *the many paths toward awareness*. \n\nTenzin pointed out that there are many different types of awareness - awareness of one's feelings, one's perception of others, one's role in the community, and many more. \n\nThe many paths leading to many different types of awareness suggests an exponential number of paths. For now, I'm going to focus on one specific path to mindfulness and wellbeing that has become very important to me over the last year. \n\nI'm looking for ways that I can use technology while mitigating its stress inducing qualities. By extension, I hope to  find ways to exist in a competitive high-stress environment like MIT while also practicing healthy wellbeing and mindfulness. A further extension, I hope find practices that will enable me to foster healthy well being in communities that recognize me as a leader.\n\nThe simplest path toward mitigating technology stress is to avoid technology. When I leave the Media Lab for the evening, and leave my laptop behind, I consistently get more than 7 hours of sleep. When I bring my laptop home, I consistently get less than 7 hours.\n\nToday in class, Joi said *Anyone can be [aware] in a Monastery. The real challenge is being aware in a war*.\n\nLeaving my laptop at the lab is like going to the monastery. For now, it is the path I will seek. When I decide it is important to bring my laptop home for the night, I will explore other paths. I am excited to find where they go.\n","createdAt":1.410891661265e+12,"editedAt":1.410895853547e+12,"publish":false,"slug":"a-class-toward-awareness","tags":["awareness"],"title":"A Class Toward Awareness"},{"_id":"DeJZ8AgYBmfqcuSXS","authorId":"Xq9eqFxPg3ms34yzb","content":"  \n\u003ciframe src=\"http://player.vimeo.com/video/54720471\" width=\"500\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen\u003e\u003c/iframe\u003e\n\nDarth Fader was completed in a 24 hour period for Music Hack Day Boston in 2012 at MIT.\n\nA Microsoft Kinect Measures your 3-D movements with a \"Lightsaber\", and modulates the playback of a music video using [Paulstretch](http://hypermammut.sourceforge.net/paulstretch/) for the audio and playback rate for the video. It overlays your silhouette onto the video.\n\nThe challenge was keeping the audio and video synchronized even though they are being manipulated with very different algorithms. \n\nIn the video, I am performing Darth Vader with Ellie Goulding's music video for her song \"Lights.\"","createdAt":1.370236059377e+12,"editedAt":1.372791228043e+12,"publish":false,"slug":"procedurally-generated-kinetic-typography-1","tags":["projects","art"],"title":"Darth Fader"},{"_id":"DxgBA26NZbyvvJ7vg","authorId":"Xq9eqFxPg3ms34yzb","content":"\n            \nI’ve been thinking about the internet in terms of Magic. Our phones are portals in our pockets, opening a small window into another world. I like the magic metaphor because it encourages me to think about the internet as a place where fantastic and wonderful things can happen. But can opening up a web browser inspire the same feelings as reading about fictional magic?\n\nReality Check -- the internet isn’t *real*. Code doesn't actually DO real things. For me, the excitement I felt when the **The Subtle Knife** opened a portal into a parallel world was more thrilling than anything I've felt on the internet. The Internet *can* do all sorts of amazing things, but I have come to the conclusion that the price that we pay for the internet is *roughly* equal to the benefit we get. An **equelibrium** of sorts. We have a fantastic library of knowledge at our fingertips, but we waste time on Facebook and buzzfeed. We have instant communication all accross the world, but we end up spending more time investing in virtual relationships, and less time with friends in the real world. GPS devices can magically direct us to a place we've never been before, but by depending on GPS we are lost without it. \n\nActually, maybe this isn't so unlike fictional magic. In most fictitous magical worlds, the magic does enact a kind equelibrium. Think of **The Lord of the Rings** -- magic is a burden that comes with a price. In **The Lord of the Rings**, and **The Golden Compass**, both trilogies are concluded with the forfeiture of Magic. Even in Harry Potter, Magic is a force that is equally available to good and evil. \n\nPushing the metaphor further reveals a score of additional parallels between Magic and Technology. There is a currency that powers magic and a currency that powers technology. After Gandalf's first encounter with the Balrag he was drained to the point of exaustion. Your smartphone works the same way. We study magic to learn it's secrets. I'm currently a student at the [Hogwarts for Hackers](http://www.hackreactor.com). Our efforts to become more skilled magic users parallel our efforts for personal growth. We aim to harness Magic for pleasure and profit. Like the internet, **The Force** from **Star Wars** is a great source that we tap into to manipulate and enhance our lives.\n\nThere are Factions that contrast in philosophy, design and implementation. Think of the five \"Colors\" in **Magic: the Gathering**. Green is the magic of nature and fecundidty, while red is the magic of Mountains and fire. These factions can interact with varying levels of synergy and incompatibility. Compare these colors to (for example) the functional asycronous style of node.js and the more traditional linear models of Ruby and Python.\n\nThere is one important feature of technology that is missing from magic: *Layers of Abstraction*. In web development we rely on layers of abstraction to build projects so capable and advanced that they may be indistinguishable from magic to and end user. This is the distinction that differntiates magic from technology. Magic is technology that we didn't invent -- just discovered. Once we understand magic, we forfeit magic -- and it becomes technology.\n\nThere's one more important parallel between magic and technology. Alladin's genie couldn't do it, neither could Dumbledor, and Gandalf may have come closest of all. Magic cannot conquer death. So conclusion I've come to is this: Don't spend your life on technology... or magic. Remeber the equelibrium, and try to be a force that leverages technology for the better. ","createdAt":1.372742807946e+12,"editedAt":1.418409677124e+12,"publish":true,"slug":"magic-technology-and-the-hogwarts-for-hackers","tags":["magic"],"title":"Magic, Technology, and the Hogwarts for Hackers"},{"_id":"EKk8nxthZGZiyGw9m","authorId":"Xq9eqFxPg3ms34yzb","content":"\n![Cover Photo](http://i1222.photobucket.com/albums/dd494/psychicenemy/See%20Like%20A%20Bee/DSCN8787.jpg)\n\nMy own foray into \"wearables\". This unusual project came out of the experimental Media Lab class called **Silicon Menagerie**. In this class, we explored ways to augment human senses to simulate the kind of experience that non-human animals have. We looked at lots of different animals, including Angler Fish, Bats, Ants, and Sharks, all of which have the ability to perceive stimuli that humans cannot.\n\nFor inspiration, my group looked to the Honey Bee. Honey Bees have a fascinating array of sensory apparati. They have 5 eyes, they communicate through dance, they operate as a hive mind, and they have a very precise perception of time that enables them to use the position of the sun as a dependable reference point as it moves across the sky. \n\nMy group built a sensor network and heads-up-display mounted in a stylish wearable package inspired by the ulra-violet vision of bees.\n\n*Steel cable makes up the enclosure. 3D printed parts hold everything together*\n\n![Early Build](http://i1222.photobucket.com/albums/dd494/psychicenemy/See%20Like%20A%20Bee/ScreenShot2014-05-15at110139AM.png)\n\n*We used an iPod touch for the display, and an Arduino Mega for communicating with the sensors*\n\n![Simulated Bee Vision](http://i1222.photobucket.com/albums/dd494/psychicenemy/See%20Like%20A%20Bee/DSCN8810.jpg)\n\n![Laia](http://i1222.photobucket.com/albums/dd494/psychicenemy/See%20Like%20A%20Bee/DSCN8803.jpg)\n","createdAt":1.410198239777e+12,"editedAt":1.410368051461e+12,"publish":false,"slug":"see-like-a-bee","tags":["projects"],"title":"See Like A Bee"},{"_id":"F93b7Zy2ctSm3XXXm","authorId":"Xq9eqFxPg3ms34yzb","content":"                          \nAn express `app` is built on top of the npm connect module. The express docs feel incomplete, because they do not cover behavior inherited from connect.\n\nExpress apps begin like this:\n```javascript\nvar express = require('express');\nvar app = express();\n```\n\nThe source of the express function looks like this [(github)](https://github.com/visionmedia/express/blob/ba5c48aa864202ae9962a4bb7d5b570efa9caa44/lib/express.js#L32-L39):\n```javascript\nfunction createApplication() {\n  var app = connect();\n  utils.merge(app, proto);\n  app.request = { __proto__: req, app: app };\n  app.response = { __proto__: res, app: app };\n  app.init();\n  return app;\n}\n```\n\n\n## Connect Prototype\n\nThe npm `connect` module is the foundation of our express app. The  source of the `connect()` function above looks like this [(github)](https://github.com/senchalabs/connect/blob/695f7e966ee3a6d76d9c76499b7a2191ba24d552/lib/connect.js#L64-L74):\n\n```javascript\nfunction createServer() {\n  function app(req, res, next){ app.handle(req, res, next); }\n  utils.merge(app, proto);\n  utils.merge(app, EventEmitter.prototype);\n  app.route = '/';\n  app.stack = [];\n  for (var i = 0; i \u003c arguments.length; ++i) {\n    app.use(arguments[i]);\n  }\n  return app;\n};\n```\nThe code above uses `utils.merge` to give `app` all the functionality of the [Connect http server prototype](https://github.com/senchalabs/connect/blob/master/lib/proto.js). This includes the `.use`, `.handle`, and `.listen` methods. \n\nThe app also merges [EventEmitter](https://github.com/Gozala/events) from the node.js `events` library. `EventEmitter` is where `app` gets `app.on` and `app.emit` from.\n\n## app.listen returns a server\n\n`app` is itself a request handler that is passed to node's `http.createServer` when you call `app.listen`\n\n```javascript\nvar port = 3000;\nvar server = app.listen(port);\n```\n\n`app.listen` is defined in the connect prototype. It looks like this:\n```javascript\n// require 'http'\napp.listen = function(){\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n```\n\n`http.createServer` returns a `net.Server` instance from node's [net module](http://nodejs.org/api/net.html).\n\n\n## Express App Prototype\n\nAfter the connect initializaition has finished, we merge the express app prototype onto our new `connect` app.\n```js\nutils.merge(app, proto);\n```\nThis line adds all the functionality from the [express application prototype](https://github.com/visionmedia/express/blob/master/lib/application.js). This is where `app.use`, `app.routes`, `app.get`, etc are defined. This behavior is documented very clearly in the express docs. \n\n\n","createdAt":1.373751142761e+12,"editedAt":1.377831810402e+12,"publish":true,"slug":"what-is-an-expressjs-app","tags":["javascript","express"],"title":"What is an express.js app?"},{"_id":"JuPEJKxfug3FaWKtJ","authorId":"Xq9eqFxPg3ms34yzb","content":"\nI love escaping into a fantasy world. At best, reading a fantasy novel is a vacation, a waking dream, a story you become a part of. After I finished reading through all 5 books in *A Song of Fire and Ice* for a second time, I started looking to scratch the Fantasy/SciFi itch. However, I often find fantasy novels frustrating. For example...\n\n- *The Hobbit* is amazing, but I've read it 18 times. LOTR is acceptable, but I finished it recently. \n- Neal Stephenson is pretty good, but his stories are about caricatures and ideas, not characters and relationships. \n- *The Belgariad* series was enjoyable, but felt juvenile - Every Character is obviously either good or bad. Nothing bad ever happens to any of the good characters. The obvious good guys \"win\" every single encounter.\n- I started *Eye of the World* on three separate occasions. I could tolerate the campyness, it moved just a little too slowly, and I lost interest every time. \n\nI started reading *Wizard's First Rule*, the first book in the The Sword of Truth series. But after the first ~5 chapters I gave up, frustrated.\n\nIn the best stories, I believe the characters and their actions as much as I believe my own personal relationships. A convincing cast pulls me in to the story better than anything else.\n\nHowever, most fantasy stories do not have convincing characters. The most offensively unconvincing characters are love interests.\n\nLet me outline the plot at the beginning of *Wizard's First Rule*...\n\n\u003e Our hero lives on the outskirts of a small remote village. While investigating the mysterious sudden murder of his parents, he notices a beautiful female traveler walking in the wilderness alone. He also notices four sinister men who are surreptitiously stalking the traveler. Our hero meets the girl, helps her avoid, and eventually defeat her stalkers. \n\n\u003e It turns out that the girl is actually a highly intelligent and powerful magician (not quite powerful enough to defeat the four men by herself), and while she maintains a tough exterior, she has been through traumatizing experiences, and occasionally needs the dependable kindness and emotional support that only our hero can provide. Our hero finds her quite attractive, but comes to consider her his friend, and having a kind and understanding disposition would never try to take advantage of her occasional weakened state.\n\nI am supposed to relate to the main character. This is preying on the fantasy that an attractive and powerful girl will see what a good, wise friend I can be, open up to me for emotional and physical support, eventually leading to romantic, and finally sexual interactions... She comes to me (and only me) and opens herself to me because of my humility, wisdom, patience, and overall goodness. This story that plays out in the first few chapters of *Wizard's First Rule* is unrealistic and aggravating. It's an angle that's overused and abused\" I suspect it's also alienating to non-male readers. \n\nWhy is this same story played out in so many other fantasy novels? As I was approaching the last chapter of *Hyperion*, I thought the story would finish inoffensively, but then the conclusion of the entire story depended completely on an improbable and unconvincing love story not at unlike the one in *Wizard's First Rule*.\n\nI concede that not every story needs to be written for all genders. They are *fantasy* novels after all. Romance novels (for example) are often written and marketed to a female audience. I imagine unrealistic male love interests are common in romance novels.\n\nI've been reading *The Name of the Wind* by Patrick Rothfuss. It's wonderful.  It's imperfect. It's like being in the other world. It's like being drunk. While I'm reading, the current world ceases to exist. I stop noticing words on the page, and the world in the story materializes in front of me. Best of all, this is a novel that gets the love story right. How? Well, the relationship is dysfunctional, doomed, and convincing. The protagonist is in his early teens, awkward, crushed, and incompetent. There are specific things he does that I relate to doing when I was his age, or in my first relationship. Awkwardness, competing interests, and ignored instincts all get in the way of the relationship. Perhaps it's because I've been there that I relate to it so strongly. Perhaps nearly everyone has. \n\nI am optimistic there are more fantasy novels like this one out there waiting to be read. \n","createdAt":1.406922435716e+12,"editedAt":1.41849686473e+12,"publish":true,"slug":"praise-for-the-name-of-the-wind","tags":["fantasy","books","reads"],"title":"Praise for The Name of the Wind"},{"_id":"MdhXW63KFPXkSKiSH","authorId":"Xq9eqFxPg3ms34yzb","content":"\n\n![Power Live](http://i1222.photobucket.com/albums/dd494/psychicenemy/Powers%20in%20Dallas/powers_live.jpg)\n\nDeath and the Powers is a massive technical undertaking that keeps growing even more massive. The February 2014 performance in Dallas, TX added another layer of technology connecting the audiences across the globe.\n\nTod Machover's composition blends acoustic orchestra with carefully engineered and synthesized electronic samples to create the unique sound of the Opera. \n\nClose mics from the orchestra, lavalieres on the singers,  a variety of synthesizers, samplers, and 16 channel encoded ambisonic playback make up the 100+ channels to be mixed at the Front of house on a Studer Vista 5.1. \n\nFor the Dallas performance, we broadcast a multi-camera shoot with 5.1 and stereo mixes to 9 different theaters all around the world, leaving us with 3 simultaneous mixes.\n\n1. Live mix for the PA in the hall, mixed from on a Studer Vista 5 at the front of house\n2. Surround 5.1 mix for the simulcast mixed on a Studer Vista 1 in our makeshift sound studio\n3. Stereo mix for the simulcast also mixed on the Studer Vista 1\n\nAudiences in the remote venues were encouraged to download our mobile app that synchronized with the performance adding additional content and interactivity with the performance happening in Dallas.\n\n![On the Console](http://i1222.photobucket.com/albums/dd494/psychicenemy/Powers%20in%20Dallas/PowersConsole.jpg)\n\nI got to mix the two like simulcast mixes, and learned my way around the Studer Vista in the process. I've done lots of mixing before, but not a lot of live sound, so  this was a very exciting opportunity. The Vista Console is also an amazing piece of gear. Every console has a predetermined amount of DSP all running on FPGAs. The assignment of the FPGAs is also totally customizable, so you choose the number of busses, sends, EQs Compressors, needed for your given show, and compile a virtual machine, loading it into the console before the show. \n\n","createdAt":1.410296904035e+12,"editedAt":1.4104640481e+12,"publish":false,"slug":"powers-global-interactive-simulcast","tags":["projects"],"title":"Mixing Death and the Powers: Global Interactive Simulcast"},{"title":"Day 13","content":"\nI have been paying attention to all the things in my life that seem to cause stress, or seem to reduce it. A lot of the stressful things really just boil down to not having enough time - I sign up or want to do more things than I can, and then all of them are just stressful because I'm worrying about getting everything else done. Is it best to just do as little as possible? There are so many interesting things to do, I think it's best to strike a balance, but where? ","tags":["awareness"],"publish":false,"authorId":"Xq9eqFxPg3ms34yzb","slug":"day-13","createdAt":1.41199967314e+12,"_id":"PBHY3ew8JejbmZTw2"},{"_id":"QEQvC45iyKd2Nbfj5","authorId":"Xq9eqFxPg3ms34yzb","content":"\n                 \nThe `Content-Type` http request header specifies the content type of the **http request payload**. The `Content-Type` header is NOT tied to the content type of the response sent by the server. \n\nHere's an example using pure JavaScript to make an asynchronous HTTP request from the browser.\n\n```js\nvar joinRequest = new XMLHttpRequest();  \njoinRequest.onload = function() {  \n  if (this.status === 200) {  \n    console.log('JOINED!', this.response); // this.response is NOT affected by 'Content-Type'\n  } \n};\n\n// 'Content-Type' header tells the server what type of data we are sending\njoinRequest.setRequestHeader('Content-Type', 'application/json');  \n// 'Accept' header tells the server what content types we can accept\njoinRequest.setRequestHeader('Accept', 'text/plain'); \njoinRequest.open('POST', '/join', true);  \njoinRequest.send(JSON.stringify({name:'Charles'}));  \n```\n\nDon't confuse `Content-Type` with `dataType`, `accepts`, and `Accept`. \n\n`dataType`, and `accepts` are jquery.ajax options. \n\n- `dataType` helps jqeury correctly process the server's response. \n- `accepts` tells jquery to include headers in the request that inform the server what type of data we are interested in. \n- `Accept` is an http request header that  informs the server which data types we are interested in. The value for the Accept header must be a semicolon-separated list of MIME types.\n","createdAt":1.371064904611e+12,"editedAt":1.410360679027e+12,"publish":true,"slug":"what-is-the-contenttype-http-header-for","tags":["ajax","javascript"],"title":"What is the Content-Type http header for?"},{"_id":"QF9Lnvsmf4cac2fgm","authorId":"Xq9eqFxPg3ms34yzb","content":"\nYou have probably noticed that different websites handle the **www** subdomain in different ways. For Example:\n\n- [google.com](http://google.com) redirects you to [www.google.com](http://www.google.com)\n- [www.ipython.org](http://www.ipython.org) redirects you to [ipython.org](http://ipython.org)\n- [writersreply.com](http://writersreply.com) and [www.writersreply.com](http://www.writersreply.com) look identical without redirecting\n\nIt's worth understanding DNS, A Records, CNAME, the HTTP Host Request Header,  and HTTP Redirects so you can make your domain function the way that you want.\n\n## DNS - Domain Name System\n\nWhen you buy a domain, your registrar allows you to specify **Authoritative Name Servers**. For example you might register `ns1.domaincontrol.com` as the authoritative resource on the internet for identifying the IP address of your domain.\n\n## A Records and CNAME\n\nOnce your Authoritative Name Server is registered, you configure that name server, specifying the IP addresses that your domain and (optionally) subdomains point to. \n\nAn **A Record** (Address Record) points your domain or subdomain to an IP Address. An **A Record** will always point to an IP Address.\n\nA **CNAME** (Canonical Name aka Alias) points your domain or subdomain to to the the IP Address of a different domain. **CNAME** records always point to domain names. \n\nThe **@** symbols is used in DNS records to indicate your root domain name. Consider the hypothetical DNS table below for the domain `writersreply.com`\n\n\u003ctable\u003e\n\u003cstyle\u003e\nthead{\n  font-weight: bold;\n}\ntd{\n  width: 180px;\n}\ntable, td, th {\n  border:1px solid black;\n  border-collapse:collapse;\n}\n\u003c/style\u003e\n\u003cthead\u003e\n\u003ctr\u003e\u003ctd\u003eHost Name\u003c/td\u003e\u003ctd\u003eAddress\u003c/td\u003e\u003ctd\u003eType\u003c/td\u003e\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\u003ctd\u003e@\u003c/td\u003e\u003ctd\u003e18.85.28.11\u003c/td\u003e\u003ctd\u003eA\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ewww\u003c/td\u003e\u003ctd\u003ewritersreply.com\u003c/td\u003e\u003ctd\u003eCNAME\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\nThe example above doesn't actually redirect users - it just means that when you navigate your browser to `www.example.com` the HTTP Request goes to the same IP address as if you navigate to `example.com`. In either case the address bar in your browser will be unchanged when the site loads. \n\n## HTTP Redirects\n\nYou can't redirect users with DNS Configuration. However, **some DNS providers offer a redirection service**. If your Domain registrar does not offer redirection service, you have to configure your web server to redirect http traffic manually. \n\nHow does this work? Here's an example of browser behavior when you navigate to `google.com`:\n\n1. Use the DNS IP address provided by your Router or ISP to determine the Authoritative Name Server for `google.com`\n  - Answer: `ns1.google.com`\n2. Request the ip address of `google.com` from `ns1.google.com`\n  - Answer: `74.125.21.100`\n3. Send an HTTP Request to `74.125.21.100` looking something like this:\n```\nGET / HTTP/1.1\nHost: google.com\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding: gzip,deflate,sdch\nAccept-Language: en-US,en;q=0.8\nDNT: 1\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36\nX-Chrome-UMA-Enabled: 1\n```\nNotice that the HTTP request is sent to an IP address, but it includes the **Host Header** `google.com`. Google's servers see the host name in the request, and send back an HTTP 301 Redirect looking akin to this:\n```\nHTTP/1.1 301 Moved Permanently\nLocation: http://www.google.com/\nContent-Type: text/html; charset=UTF-8\nServer: gws\nContent-Length: 219\nX-XSS-Protection: 1; mode=block\nX-Frame-Options: SAMEORIGIN\nAlternate-Protocol: 80:quic\nAge: 25150\nDate: Sun, 01 Jun 2014 13:09:35 GMT\nExpires: Tue, 01 Jul 2014 13:09:35 GMT\nCache-Control: public, max-age=2592000\nConnection: keep-alive\n```\n\nImportant points\n\n- The only thing that DNS acutally does is tie Domain names to IP Addresses\n- HTTP Requests are sent to IP addresses, but include the domain name in the Host Header\n- HTTP servers may serve different content depending on the contents of the Host Header\n\nThe exact way you configure your server to redirect http requests depends on the server you are using. \n\n- Apache servers can redirect via the .htaccess file ([Stackoverflow](http://stackoverflow.com/questions/1100343/apache-redirect-from-non-www-to-www))\n- Nginx servers can redirect via server block ([Stackoverflow](http://stackoverflow.com/questions/10294481/how-to-redirect-a-url-in-nginx))\n- Node.js servers inspect the HTTP Host header, and headers modify the response object\n\n```javascript\n// Inside node.js request handler\nresponse.writeHead(302, {\n  'Location': 'your/path/here',\n  // optional other headers...\n});\nresponse.end();\n```\n\n   ","createdAt":1.40149549043e+12,"editedAt":1.410896006756e+12,"publish":true,"slug":"dns-cname-a-record-and-http-redirect-explained","tags":["dns","http"],"title":"DNS, CNAME, A Record, and HTTP Redirect Explained"},{"_id":"QeEodtBgPPqnQNCDs","authorId":"Xq9eqFxPg3ms34yzb","content":"\nI chose to use Anaconda to manage my Python installation in favor of the OSX stock Python 2.7 or brew'd Python. This makes it easy to switch between Python 2 and Python 3, and it works well with [Project Jupyter](http://jupyter.org/). \n\nI would like to default to Python 3.4.3, because that works best with iPython notebooks in Project Jupyter. But npm package often use node-gyp to build packages, and node-gyp is not compatible with Python 3. When I tried to install the npm fsevents package, I got the following error:\n\n```\ngyp ERR! configure error \ngyp ERR! stack Error: Python executable \"python\" is v3.4.3, which is not supported by gyp.\ngyp ERR! stack You can pass the --python switch to point to Python \u003e= v2.5.0 \u0026 \u003c 3.0.0.\ngyp ERR! stack     at failPythonVersion (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:108:14)\n...\n```\n\nIt is possible to specify a python version when npm installing `npm install --python=python2.7`. We can also configure npm to use a specific version of python ([stackoverflow](http://stackoverflow.com/questions/20454199/how-to-use-a-different-version-of-python-during-npm-install)).\n\n``` bash\n$ npm config set python python2.7\n```\n\nThis solved the node-gyp problem, but created another problem. By default, npm modules installed with the `-g` are installed to `/usr/local`. You can check where global npm modules are stored with\n\n``` bash\n$ npm config get prefix\n```\n\nI usually just use sudo when installing global npm modules in OSX. However, for some reason the when I `sudo npm install -g` with with npm configured to use Python 2.7, Python ran as a different user without admin privileges, and failed. (Does anyone know why?)\n\n[It is safe](https://github.com/npm/npm/issues/3139) to use sudo when npm installing, but I would prefer to sudo as little as possible. To solve the problem, I configured npm to install global packages to a directory that does not require admin privileges. \n\nIt is not difficult to configure npm to use a custom path for storing global modules ([stackoverflow](http://stackoverflow.com/questions/19352976/npm-modules-wont-install-globally-without-sudo)).\n\n``` bash\n$ npm config set prefix '~/.npm-packages'\n```\n\nThen add the following to .bashrc (linux) .bash_profile (osx)\n\n``` bash\nexport PATH=\"$PATH:$HOME/.npm-packages/bin\"\n```\n\nThis also allows us to `npm install -g` without sudo.\n","createdAt":1.448430371752e+12,"editedAt":1.448430752378e+12,"publish":true,"slug":"getting-npm-anaconda-jupyter-and-brew-to-play-together","tags":[""],"title":"Getting Npm, Anaconda, Jupyter, and Brew to Play Together"},{"_id":"Wzo4q7pxmbkrhYnaK","authorId":"Xq9eqFxPg3ms34yzb","content":"\nIn Fall 2014, I took the MIT Media Lab class [Principles of Awareness](http://aware.media.mit.edu/details), taught by the Media Lab Director Jio Ito, and Venerable Tenzin Priyadarshi.\n\nPart of this class involved blogging about the topics. I started the blog here, and later picked up at the [class blog](http://aware.media.mit.edu).\n\nOn the conclusion of the class, I wrote this poem about my experiences. \n\n##Emperor Moth##\n\nSometimes when I lie awake at night  \ntrying to fall asleep  \nThe cares of a waking human badger my thoughts  \nI think to myself:   \n\"I am an emperor moth\"  \n  \nAnd I am the moth  \nfor a moment lightly fluttering  \nthrough the evening breeze  \nthe full moon on my wings  \nreflected in the forest river far below  \nAnd I am human again  \n  \nlying awake and night  \na forgotten obligation  \nHounded by the cares of a waking human  \nI think to myself:  \n\"I am a gray wolf\"  \n  \nFar below the moth  \nI am standing on a hill  \nI am hungry for my next meal  \nI am beside my brothers and sisters  \nTo the wolf, thoughts and feelings are the same  \nAn unfulfilled promise has slipped into my mind  \nand I am human again  \n  \nThe wolf cannot make a promise  \nbut lives for family relations  \nAnd the moth never tries to be a moth  \nonly flies toward the light  \n  \nBut I can make or even break a promise  \nand I can live for my family and my pack  \nand try to be the moth  \n And I can fly toward the light  \n  \nSomewhere between my own restless mind  \nand the cardinal thoughts of the wolf  \nI am flying toward the light  \n","createdAt":1.418322772076e+12,"editedAt":1.418323915158e+12,"publish":false,"slug":"awareness","tags":["awareness"],"title":"Awareness"},{"_id":"YHYhEtKXEfA552fGe","authorId":"Xq9eqFxPg3ms34yzb","content":"\nToday is the end of the first week of class. My goal is to find ways of using technology that mitigate the stress inducing qualities. For example, waking up and immediately jumping into email definitely does not help my well-being. \n\nLast night was friday night, and I stayed at the lab until about 9pm, bringing my laptop with me at the end of the day. I spent the evening with my girlfriend, and I didn't use the laptop at all (or feel the need to) so I don't think that there was anything negative about bringing my laptop home.\n\nThe ultimate goal is to be able to exist in the world of technology without it being a force for isolation, removing me from the real world. While avoiding technology is an easy way to avoid its negative impact, I'd like to *find* the best ways to use it.\n\nI still think that it's a good idea to avoid technology intentionally.  Going back to Joi's comment about awareness during a war -- it may be good to be able to be well during a war, but it's still best to avoid wars. Similarly, it's best to avoid technology when possible. Unlike war, I like technology - the analogy breaks down, and it's up to us to find the best path forward. \n\n","createdAt":1.411239962453e+12,"editedAt":1.411241418094e+12,"publish":false,"slug":"day-3","tags":["awareness"],"title":"Day 3"},{"title":"I hope","content":" \nI hope I live to see the day when we look back at this time period and say:\n\n\u003e They used *money* as a measure of success at all scales - how primitive!","tags":["hope"],"publish":true,"authorId":"Xq9eqFxPg3ms34yzb","slug":"i-hope","createdAt":1.387606363188e+12,"_id":"bp3DgoJkrmGRE2BkX"},{"_id":"edhFo7G8cBvxNAwvg","authorId":"Xq9eqFxPg3ms34yzb","content":"\nFor reference, I'm recording an example of handling **Simple CORS Requests** with some handy connect/express implementation details. \n\nRemember when using [webapp.use()](http://www.senchalabs.org/connect/proto.html#app.use) with a path as the first argument:\n\n- All sub-paths of that path are also handled\n- The specified path is striped from the beginning `req.url` inside request handlers\n\nNotes about the `req` parameter to request handlers:\n\n- `req` objects are instances of node's [http.IncomingMessage](http://nodejs.org/api/http.html#http_http_incomingmessage)\n- Your framework may build on top of the `IncomingMessage` interface. For example, express adds the [param](http://expressjs.com/api.html#req.param) method\n\n```javascript\n// hosts whitelist\nvar coorsAccessOrigins = {\n  'http://localhost:3000': true,\n  'http://example.com': true,\n  'http://charlesholbrow.com': true,\n  'http://www.charlesholbrow.com': true\n};\n\n// allow simple CORS GET requests to the /dds directory\nwebApp.use('/dds', function(req, res, next){\n  // Don't add access control headers if host is not in whitelist\n  if (!coorsAccessOrigins[req.headers.origin]) return next();\n\n  // The origin header implies this is a CORS request.\n  // The user-agent (the browser) is unlikely to add the origin\n  // header if it doesn't support CORS\n  if (!req.headers.origin) return next();\n\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n  res.setHeader('Access-Control-Allow-Methods', 'GET');\n  return next();\n});\n```\n\nNotice the difference between the `origin` request header and the `host` request header. \n\n- The `host` request-header specifies the Internet host and port number of the resource being requested\n- The `origin` request-header indicates that this is a CORS request\n\n``` JSON\n// example req.headers object\n{\n  \"host\": \"localhost:3000\",\n  \"connection\": \"keep-alive\",\n  \"cache-control\": \"no-cache\",\n  \"pragma\": \"no-cache\",\n  \"origin\": \"http://charles.meteor.com\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"dnt\": \"1\",\n  \"referer\": \"http://charles.meteor.com/\",\n  \"accept-encoding\": \"gzip,deflate,sdch\",\n  \"accept-language\": \"en-US,en;q=0.8\",\n  \"x-forwarded-for\": \"127.0.0.1\",\n  \"x-forwarded-port\": \"3000\",\n  \"x-forwarded-proto\": \"http\"\n}\n```","createdAt":1.404826921163e+12,"editedAt":1.418326029065e+12,"publish":true,"slug":"connect-handler-example-for-simple-cors-requests","tags":["connect","javascript","cors"],"title":"Connect Handler Example for Simple CORS Requests"},{"_id":"fsfNDJNJujAuu4h9y","authorId":"Xq9eqFxPg3ms34yzb","content":"\n![The Installation at Le Labo Paris](http://i1222.photobucket.com/albums/dd494/psychicenemy/VV%20Public/VVspace-with-Julien.jpg)\n\nI worked on the audio at pretty much every level for the installation all about the human voice. \n\n- Recording\n- Sound Design\n- Spec and build the 10.2 channel playback system\n- Engineering and mixing - 10.2 channel version for the installation\n- Engineering and mixing - 5.1 and stereo mixes for [Commercial Release](http://www.bowers-wilkins.com/Society_of_Sound/Society_of_Sound/TodMachover/vocal-vibrations.html)\n\nThis project was filled with interesting creative decisions from how to take advantage of the acoustics of the venue, and developing the workflow for 10.2 surround mixing. The 10 channel mix led to some creative and powerful surround tools that I plan on developing further as part of my master's thesis at the Media Lab.\n\nThere's lots more information on the [Opera Of the Future page](http://opera.media.mit.edu/projects/vv/). The Installation opened in Paris, France in March, but it's going to be the first exhibit at the new [Le Laboratoire Cambridge](http://www.lelaboratoirecambridge.com/) when it opens on October 30th! If you are around Boston, you can come see it for yourself.\n","createdAt":1.410368191657e+12,"editedAt":1.418409428723e+12,"publish":false,"slug":"vocal-vibrations","tags":["projects"],"title":"Vocal Vibrations"},{"_id":"h7AyXcgACrJ3m3aFF","authorId":"Xq9eqFxPg3ms34yzb","content":"      \n\u003ciframe src=\"http://player.vimeo.com/video/57045449\" width=\"500\" height=\"375\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen\u003e\u003c/iframe\u003e\n\nI coded this Kinetic Typography tech demo in C# with Unity 3D. My software takes takes two files as input:\n\n- An audio file\n- A text file with lyrics and timing information\n\nSynchronized 3D text is then arranged, animated and rendered in real time. ","createdAt":1.370235769791e+12,"editedAt":1.372791251513e+12,"publish":false,"slug":"procedurally-generated-kinetic-typography","tags":["projects"],"title":"Procedurally Generated Kinetic Typography"},{"_id":"hgzuRqLnrXKhDNRk6","authorId":"Xq9eqFxPg3ms34yzb","content":"\nAnother 0 laptop night last night. I like to think that having the night to re-charge will give me more focussed productive hours during the next day. Yesterday (after a 0 laptop night) I had probably two very productive hours, and quite a few more hours where I was juggling lots of important things, but not getting a huge amount done.\n\nI use my cell phone as an alarm clock. This morning after I turned my alarm clock off, I was very tempted to open up Gmail, and instantly read email from the last night. I would like to avoid checking email before I get out of bed. I will consider three strategies: \n\n- Go to bed early, and depend on being able to wake up naturally\n- Avoid the urge by using a dedicated alarm clock. \n- Suppress the urge\n\nSuppression causes a little stress in itself, and it is essentially the same as strategy as leaving my laptop at home.\n\nI think it is best to take opportunities to easily avoid causing stress - but to consider the consequences, and be ready to spend the energy required to suppress if needed. \n\n\n","createdAt":1.411137768541e+12,"editedAt":1.411138987936e+12,"publish":false,"slug":"day-2","tags":["awareness",""],"title":"Day 2"},{"title":"Day 4","content":"\nI do think that spending a little extra time in the evenings *away* from email makes me more productive when I'm not it. I'll continue to gather data points over the coming weeks. ","tags":["awareness"],"publish":false,"authorId":"Xq9eqFxPg3ms34yzb","slug":"day-4","createdAt":1.411318637126e+12,"_id":"sBku5XncthNfrXTy4"},{"_id":"tTK9ZEPx7qJWiNANw","authorId":"Xq9eqFxPg3ms34yzb","content":"\n                                                     \n# I'm Charles\n## Media Artist, JavaScript Engineer, Audio Wizard.\n\nResearcher with the Opera of the Future at the [MIT Media Lab][2].\n\nCreator of [Pixel Aether][3] - the open source collaborative video game engine for the web. \n\nCreative problem solver with a background in **research**, **music**, and **software development**.\n\nDesigned audio effects and music technology at the MIT Media Lab. Coded DSP in C for processing 3D video in the frequency domain at the MIT George Harrison Spectroscopy Lab.\n\nCompounded the efficacy of my team as an Audio Tools Specialist at music-video-game developer, Seven45 Studios. \n\nJavaScript expert with experience in *too many* other programming languages.\n\nI am an alumnus of [Hack Reactor][1] in San Francisco. I have a Bachelor of Music and Sound Recording Technology Degree from the University of Massachusetts Lowell.\n\nFind me on all the usual suspects:\n\n\n\u003ca href=\"http://github.com/CharlesHolbrow\"\u003e\u003cimg src=\"/github.png\" style=\"display:inline; width:64px; height=64px;\" alt=\"Github\" /\u003e\u003c/a\u003e\n\u003ca href=\"http://www.linkedin.com/in/charlesholbrow\"\u003e\u003cimg src=\"/linkedin.png\" style=\"display:inline; width:64px; height=64px;\" alt=\"LinkedIn\" /\u003e\u003c/a\u003e\n\u003ca href=\"http://twitter.com/CharlesHolbrow\"\u003e\u003cimg src=\"/twitter.png\" style=\"display:inline; width:64px; height=64px;\" alt=\"Twitter\" /\u003e\u003c/a\u003e\n\u003ca href=\"http://www.facebook.com/cholbrow\"\u003e\u003cimg src=\"/facebook.png\" style=\"display:inline; width:64px; height=64px;\" alt=\"Facebook\" /\u003e\u003c/a\u003e\n\n[1]: http://www.hackreactor.com\n[2]: http://media.mit.edu\n[3]: http://www.PixelAether.com\n","createdAt":1.372794985241e+12,"editedAt":1.418508550069e+12,"publish":false,"slug":"about","tags":["about"],"title":""},{"_id":"uMCdwZFupm7qgT3jb","authorId":"Xq9eqFxPg3ms34yzb","content":"\n       \nI've just finished some contract work on the Web App [www.VisualStager.com][vs]. This is a large scale project that build on top of Express, Mongoose, Backbone, [F][F], and [PsuedoClass][PS].\n\nSince Express and Backbone are both lightweight and flexible, it was pretty neat to see them working a part of a well designed large scale production app. My team of four developers had just under two weeks to build out an admin interface for the entire app. \n\nVisual Stager is an interior design app that depends on three.js and clever mathematics to position 3D furniture models inside a 2D photo of a room. We needed to create admin pages for the Account, User, House, Photo, Scene, and Furniture collections. While the experience is still fresh in my mind, I'm going to memoize some interesting takeaways. \n\n## Pure Backbone is too lightweight for large scale apps\nIn a mature framework like Rails or Django, building an admin page is trivial. In our case, we depended on [F.ListComponent][flc] to render collections of items as tables or lists without boilerplate. F.Component organizes the following into a logical unit of application code:\n\n- A Backbone View\n- A Backbone Model\n- Handlebars templates\n- Public methods\n- Sub-components\n\nF Components address one of the main complexity headaches found in backbone apps -- There is no Controller class. Additionally, we can subclass F Components using the [PsuedoClass][PS] inheritance pattern. \n\n## No Associations\nIn ActiveRecord we have \"associations\". Imagine a User in our app is a member of many accounts. When we delete the user, we want to automatically remove that user from all accounts it belongs to. This is trivial with ActiveRecord. However, the Mongo/Express stack is not mature enough to have abstracted this behavior. We had to write the association logic manually in our server-side controllers.\n\n## Async\nThis is where Express gets fun. As part of the admin behavior, I found myself writing backend operations that run on large collections of MongoDB documents. The asynchronous style of node.js lends itself perfectly to this type of operation. The [async][async] library provides operations that operate on collections, similar to \\_.each and \\_.map -- the difference between async and underscore is synchronicity. Async iterators may operate on each member of a collection asynchronously.\n\n[F]: http://lazd.github.io/F/ \n[PS]: http://lazd.github.io/PseudoClass/\n[vs]: http://www.visualstager.com\n[flc]: http://lazd.github.io/F/F/jsdoc/F.ListComponent.html\n[async]: https://github.com/caolan/async\n","createdAt":1.373506096622e+12,"editedAt":1.396894034045e+12,"publish":true,"slug":"-in-the-trenches-with-a-large-scale-backboneexpressmongodb-app","tags":["javascript","express","backbone","async"],"title":"In the Trenches With a Large Scale Backbone/Express/MongoDB App"},{"_id":"vu2A8FhyQmzxpcwAk","authorId":"Xq9eqFxPg3ms34yzb","content":"                     \nWebRTC is pretty tricky to work with right now. As of June 2013, \nsupport in Chrome and Firefox Nightly is fragmented and incomplete. \nThe best explanation of WebRTC that I have found is the \n[WebRTC Spec Draft from the W3C](http://www.w3.org/TR/webrtc/).\nThis pedantic document is filled with jargon specific to Internet Connectivity \nEstablishment. To elucidate the spec, I put together a list of descriptions \nfor the most fundamental concepts.\n\nProceed with Caution! Both Chrome and Firefox are still a long way \nfrom compliance. \n\n**ICE** - Protocol for Network Address Translation -\n[Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols](http://www.ietf.org/rfc/rfc5245.txt).\nICE agents include STUN and TURN servers.\n\n**STUN** - Session Traversal Utilities for NAT (STUN).\nPeers connect to a stun server to find their public facing \naddresses, AND other info on how that peer may be reached fron the \ninternet.\n\n**TURN** - Traversal Using Relays around NAT (TURN). Like a\nstun server, but can relay data from one peer to another if the\nclients are unable to connect directly. Every TURN server is\nalso a STUN server.\n\n**NAT** - Network Address Translation - When a signal passes\nthrough a router, the router may alter the port number --\neffectively creating a \"public facing address\". The public address is \neffectively  mapped to a different address behing the router. \n\n**SDP** - Session Description Protocol -\n[Wikipedia](http://en.wikipedia.org/wiki/Session_Description_Protocol)\n- a format for describing streaming media initialization and connectivity \nparameters. \n\nAn SDP example from someRTCPeerConnection.localDescription.sdp looks \nlike this:\n\n    v=0\n    o=Mozilla-SIPUA-24.0a1 15165 0 IN IP4 0.0.0.0\n    s=SIP Call\n    t=0 0\n    a=ice-ufrag:1f8009b2\n    a=ice-pwd:04f106d867cbba054729ae220b5c9618\n    a=fingerprint:sha-256 62:5F:18:CD:23:D3:BD:D9:C9:B4:42:BD:3B:07:2A:6A:EE:B0:06:59:6D:A3:B3:C8:E4:FA:99:B3:37:5E:56:FA\n    m=audio 41438 RTP/SAVPF 109 0 8 101\n    c=IN IP4 199.87.82.66\n    a=rtpmap:109 opus/48000/2\n    a=ptime:20\n    a=rtpmap:0 PCMU/8000\n    a=rtpmap:8 PCMA/8000\n    a=rtpmap:101 telephone-event/8000\n    a=fmtp:101 0-15\n    a=sendrecv\n    a=candidate:0 1 UDP 2113667327 10.0.1.46 65468 typ host\n    a=candidate:1 1 UDP 1694302207 199.87.82.66 41438 typ srflx raddr 10.0.1.46 rport 65468\n    a=candidate:0 2 UDP 2113667326 10.0.1.46 57425 typ host\n    a=candidate:1 2 UDP 1694302206 199.87.82.66 38208 typ srflx raddr 10.0.1.46 rport 57425\n    m=application 37652 SCTP/DTLS 5000\n    c=IN IP4 199.87.82.66\n    a=fmtp:5000 protocol=webrtc-datachannel;streams=16\n    a=sendrecv\n    a=candidate:0 1 UDP 2113667327 10.0.1.46 55401 typ host\n    a=candidate:1 1 UDP 1694302207 199.87.82.66 37652 typ srflx raddr 10.0.1.46 rport 55401\n    a=candidate:0 2 UDP 2113667326 10.0.1.46 61947 typ host\n    a=candidate:1 2 UDP 1694302206 199.87.82.66 46592 typ srflx raddr 10.0.1.46 rport 61947\n\n**ICE Agent** - A peer trying to connect to another peer via ICE. I have \nalso heard this term used to describe an arbitrary node in the Internet \nConnectivity Establishment Handshake. \n\nThe following definitions borrow from the [IETF ICE Spec](http://www.ietf.org/rfc/rfc5245.txt)\n\n**ICE Peer** - From the perspective of one of the agents in a session, \nits peer is the other agent.  Specifically, from the perspective of the \nofferer, the peer is the answerer.  From the perspective of the \nanswerer, the peer is the offerer.\n\n**ICE Transport Address** - The combination of an IP address, port and transport\nprotocol (such as UDP or TCP) port.\n\n**ICE Candidate** -  A transport address that is a potential\npoint of contact for receipt of media.  An agent may have many\ncandidate addresses -- each consisting of an IP address and \nport number. Candidates might include:\n\n- A transport address on a directly attached network interface (a \"host\" address)\n- A translated transport address on the public side of a NAT (a \"server reflexive\" address)\n- A transport address allocated from a TURN server (a \"relayed\" address)\n\nCandidates have properties -- their type (server reflexive, relayed \nor host), priority, foundation, and base.\n\n**ICE Component** - A component is a piece of a media stream requiring a\nsingle transport address; a media stream may require multiple\ncomponents, each of which has to work for the media stream as a\nwhole to work.  For media streams based on RTP, there are two\ncomponents per media stream -- one for RTP, and one for RTCP.\n\n\nHelpful WebRTC Resources\n----------------------\n\n[Mozilla Hacks blog post mentions some of the discrepancies between chrome and Firefox](https://hacks.mozilla.org/2013/05/embedding-webrtc-video-chat-right-into-your-website/)  \n[Webrtc on Chrome for Beginners](https://webrtc-experiment.appspot.com/docs/rtc-datachannel-for-beginners.html)  \n[General Description on IETF](http://datatracker.ietf.org/doc/draft-ietf-rtcweb-jsep/?include_text=1)  \n[WebRTC Spec Draft from the W3C](http://www.w3.org/TR/webrtc/)  \n[Peer.js -- This WebRTC abstraction library worked really well for me](http://www.peerjs.com)  \n","createdAt":1.371924619026e+12,"editedAt":1.374195677873e+12,"publish":true,"slug":"webrtc-technologies-glossary","tags":["webrtc","javascript"],"title":"WebRTC Concepts"},{"_id":"xMrSco5LEYYbizcqT","authorId":"Xq9eqFxPg3ms34yzb","content":"      \nA node.js module can export:\n\n- A function that we call when we import a module\n- An object with properties\n- Both! (a function with assigned properties)\n\n`module` is the global scope variable in a node.js file. It behaves similarly to `window` in the browser.\n\n```javascript\n// Assignment can hide the \"exports\" name\n// in a node.js file:\nvar exports = 'Caution!' // creates a new exports object that will NOT be exported\nexports = 'Same problem!' // same problem as above\n```\n\nThe controller pattern (exemplified below) exports a function \n\n```javascript\nvar app;\nvar templates;\nvar emailController;\n\n// Code outside of the exports function will be run once the \n// first time we require this module is required\nvar mongoose = require('mongoose');\nvar User = mongoose.model('User');\nvar controller = {};\n\n// if the exports function on a module requires the app,\n// pass express app in when we require this controller\nmodule.exports = function(_app) {\n  app = _app;\n\n  // if we know that 'templates' was set on the app before\n  // requring this controller, then we can app.get 'templates'\n  // This will re-set the templates variable every time that \n  // this module-function is called.\n  templates = app.get('templates'); \n\n  // We can also require modules directly on the exports\n  // function. Asume that the Email module uses the same\n  // module.exports = function(_app) pattern as this \n  // module.\n  emailController = require(__dirname + 'controllers/Email')(app)\n\n  return controller;\n}\n\ncontroller.getAPI = function(req, res, next) {...};\n```\n","createdAt":1.382903318194e+12,"editedAt":1.390062527762e+12,"publish":true,"slug":"what-should-a-node-module-export","tags":["node","module","exports"],"title":"What Should a Node Module Export?"},{"_id":"y2rRZ7wd62xJMzutT","authorId":"Xq9eqFxPg3ms34yzb","content":"\nI'm launching [Pioneer (github)](http://github.com/CharlesHolbrow/Pioneer).\n\n- Full stack blogging application built with [Meteor](http://meteor.com)\n- Written entirely in [CoffeeScript](http://coffeescript.org/)\n- Designed for simplicity, maintainability, and performance\n\nThis site, [www.CharlesHolbrow.com](http://http://www.charlesholbrow.com/) is built using Pioneer.\n","createdAt":1.37024046571e+12,"editedAt":1.418419732266e+12,"publish":true,"slug":"pioneer-launch","tags":["projects"],"title":"Pioneer"},{"_id":"yCu4SbPzhJMfEB2zn","authorId":"Xq9eqFxPg3ms34yzb","content":"\n    \n\u003ciframe src=\"http://player.vimeo.com/video/57172794\" width=\"500\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen\u003e\u003c/iframe\u003e \n\nFor an optimist, not knowing what will happen next is the most exciting and wonderful feeling. “I just might record a #1 hit with my Indie Rock Revival Accordion String Band”. Then it takes courage to separate what could happen next from what is likely to happen next. Doing so means admitting “No, I probably won’t become a Rock Star bigger than The Beatles, and even worse, I’m probably not even going to win the lottery.” This realization might turn an optimist into a pessimist. \n\nHowever, we mustn't let trifles stand in our way, and we certainly do not wish to be pessimists! So let us make accordion music not because we want fame or recognition, but because by doing so we find and share joy. Ah ha! Not feeling so pessimistic anymore! \n\n...but I liked that feeling of wondering what will happen next, fantasizing about the good and fearing the bad. Now that I think about it, letting my mind wander through the possibilities inspired me to prepare for the hard times as much as it excited me for the good times. Excellent. I will continue to wonder optimistically about the future. My curiosity will inspire the motivation to find and love the good times and to weather the bad. I may bicycle across Alaska! I may share my wonder with my friends and family through art and music. I may adopt or father children and send this wonder to the next generation. I may wonder wonderful things as long as I live, for best of all: I may always wonder what will happen when I die. Brilliant! Optimism restored!\n\nWondering is exciting, and one of my favorite ways of wondering is wandering. In the city or the wilderness, I never know what is around the next corner. When I find out, there is always another corner not far ahead.\n\nInspired by my love for wandering, I am developing an iPhone game about exploration. The development process was wondrous itself: I started with only the minimalist (but open source) MOAI Mobile Framework, so I had to code nearly everything myself. I also made difficult decisions about structuring the code base (I am more familiar with the full featured game framework, Unity 3D, where most complex organizational decisions are already made). I am especially proud of the 2D lighting and shadows engine I coded in C++. \n","createdAt":1.370236382096e+12,"editedAt":1.401201000339e+12,"publish":false,"slug":"wanderlust","tags":["projects","art"],"title":"Wanderlust"},{"_id":"zCRvHmabZbTBFLCFZ","authorId":"Xq9eqFxPg3ms34yzb","content":"\nThis somewhat sad video but fascinating video brings up many thoughts about awareness, mindfulness, and the nature of software.\n\n[Temple OS 5-Minute Random Code Walk-Thru](http://www.templeos.org/Wb/Accts/TS/Wb2/WalkThru.html)\n","createdAt":1.411440425331e+12,"editedAt":1.411999816411e+12,"publish":false,"slug":"day-6","tags":["awareness"],"title":"Day 6"}]
